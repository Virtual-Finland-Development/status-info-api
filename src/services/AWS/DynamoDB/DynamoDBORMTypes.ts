import { AttributeValue } from "@aws-sdk/client-dynamodb";
import { OpenAPIV3 } from "openapi-types";

export type PrimitiveDynamoDBRecord = Record<string, DDBPrimitive>;
export type LooseDynamoDBRecord = Record<string, DDBPrimitive | AttributeValue>;
export type DynamoDBRecord = Record<string, AttributeValue>;

export enum KnownAutoGeneratedTypes {
  "uuidv4",
  "uuidv5",
  "timestamp",
}

export type DynamoDBModel = {
  tableName: string;
  schema: {
    AttributeDefinitions: Array<{
      AttributeName: string;
      AttributeType: string;
      _AutoGenerated?: {
        onEvents: Array<string>;
        autoGenType: KnownAutoGeneratedTypes;
        autoGenFields?: Array<string>;
        format?: string;
      };
      _AllowedValues?: Array<DDBPrimitive>;
      _DefaultValue?: DDBPrimitive;
    }>;
    KeySchema: Array<{ AttributeName: string; KeyType: string }>;
    GlobalSecondaryIndexes?: Array<{ IndexName: string; KeySchema: Array<{ AttributeName: string; KeyType: string }> }>;
    [key: string]: any;
  };
  openapi?: OpenAPIV3.NonArraySchemaObject;
};

export type DDBSearchClause = Array<{ key: string; value: DDBPrimitive; operator?: DDBOperator }>;

export type DDBPrimitive = string | number | boolean | null | undefined;
export type DDBOperator =
  | "="
  | "<>"
  | "<"
  | "<="
  | ">"
  | ">="
  | "BEGINS_WITH"
  | "BETWEEN"
  | "IN"
  | "CONTAINS"
  | "NOT_CONTAINS"
  | "ATTRIBUTE_EXISTS"
  | "ATTRIBUTE_NOT_EXISTS"
  | "ATTRIBUTE_TYPE"
  | "NULL"
  | "NOT_NULL";
